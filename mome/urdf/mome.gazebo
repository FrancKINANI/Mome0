<?xml version="1.0"?>
<robot>
  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <!-- Taux de mise à jour du contrôle en Hz -->
      <updateRate>10.0</updateRate>

      <!-- Cinématique du robot -->
      <leftFrontJoint>wheel4_joint</leftFrontJoint>
      <rightFrontJoint>wheel3_joint</rightFrontJoint>
      <leftRearJoint>wheel2_joint</leftRearJoint>
      <rightRearJoint>wheel1_joint</rightRearJoint>

      <!-- Séparation entre les roues -->
      <wheelSeparation>0.4</wheelSeparation>

      <!-- Diamètre des roues -->
      <wheelDiameter>0.2</wheelDiameter>

      <!-- Couple maximal que les roues peuvent produire (en Nm) -->
      <torque>10</torque>

      <!-- Topic pour recevoir les messages geometry_msgs/Twist, par défaut cmd_vel -->
      <commandTopic>cmd_vel</commandTopic>

      <!-- Topic pour publier les messages nav_msgs/Odometry, par défaut 'odom' -->
      <odometryTopic>odom</odometryTopic>

      <!-- Cadre d'odométrie, par défaut 'odom' -->
      <odometryFrame>odom</odometryFrame>

      <!-- Cadre du robot pour calculer l'odométrie, par défaut 'base_footprint' -->
      <robotBaseFrame>dummy</robotBaseFrame>

      <!-- Publier les transformations pour les liens des roues, par défaut false -->
      <publishWheelTF>true</publishWheelTF>
      <broadcastTF>true</broadcastTF>

      <!-- Publier les transformations pour l'odométrie, par défaut true -->
      <publishOdom>true</publishOdom>

      <!-- Publier sensor_msgs/JointState sur /joint_states pour les articulations des roues, par défaut false -->
      <publishWheelJointState>true</publishWheelJointState>

      <topic_name_twist>cmd_vel</topic_name_twist>
      <topic_name_odometry>odom</topic_name_odometry>
      <topic_name_joint>joint</topic_name_joint>

      <!-- Partie requise par Gazebo -->
      <covariance_x>0.0001</covariance_x>
      <covariance_y>0.0001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
    </plugin>
</gazebo>

<gazebo reference="wheel1_link">
	<material>Gazebo/Green</material>
	<kp>1000000.0</kp> <!-- kp and kd for rubber -->
	<kd>100.0</kd>
	<mu1>1.0</mu1>
	<mu2>1.0</mu2>
	<maxVel>1.0</maxVel>
	<minDepth>0.00</minDepth>
</gazebo>

<gazebo reference="wheel2_link">
	<material>Gazebo/Green</material>
	<kp>1000000.0</kp> <!-- kp and kd for rubber -->
	<kd>100.0</kd>
	<mu1>1.0</mu1>
	<mu2>1.0</mu2>
	<maxVel>1.0</maxVel>
	<minDepth>0.00</minDepth>
</gazebo>

<gazebo reference="wheel3_link">
	<material>Gazebo/Green</material>
	<kp>1000000.0</kp> <!-- kp and kd for rubber -->
	<kd>100.0</kd>
	<mu1>1.0</mu1>
	<mu2>1.0</mu2>
	<maxVel>1.0</maxVel>
	<minDepth>0.00</minDepth>
</gazebo>

<gazebo reference="wheel4_link">
	<material>Gazebo/Green</material>
	<kp>1000000.0</kp> <!-- kp and kd for rubber -->
	<kd>100.0</kd>
	<mu1>1.0</mu1>
	<mu2>1.0</mu2>
	<maxVel>1.0</maxVel>
	<minDepth>0.00</minDepth>
</gazebo>

<gazebo reference="camera_link">
	<material>Gazebo/Red</material>
</gazebo>

<gazebo reference="body_link">
	<material>Gazebo/Blue</material>
</gazebo>

<!-- Plugin for LiDAR -->
<gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
        <update_rate>30.0</update_rate>
        <pose>0 0 0.3 0 0 0</pose>
        <visualize>true</visualize>
        <ray>
            <scan>
                <horizontal>
                    <samples>720</samples>
                    <resolution>1</resolution>
                    <min_angle>-1.57</min_angle>
                    <max_angle>1.57</max_angle>
                </horizontal>
            </scan>
            <range>
            <min>0.2</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
            </range>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_laser.so">
            <topicName>/scan</topicName>
            <frameName>lidar_link</frameName>
        </plugin>
    </sensor>
</gazebo>

  <!-- Plugin for Camera -->
  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
    <sensor name="camera" type="camera">
        <update_rate>30.0</update_rate>
        <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
                <width>800</width>
                <height>800</height>
                <format>R8G8B8</format>
            </image>
            <clip>
                <near>0.02</near>
                <far>300.0</far>
            </clip>
        </camera>
        <plugin name="gazebo_ros_camera_controller" filename="libgazebo_ros_camera.so">
            <always_on>true</always_on>
            <updateRate>0.0</updateRate>
            <cameraName>camera</cameraName>
            <imageTopicName>rgb/image_raw</imageTopicName>
            <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
    </sensor>
  </gazebo>
</robot>

